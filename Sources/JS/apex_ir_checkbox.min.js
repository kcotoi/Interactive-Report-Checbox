apex.kcUtils.irCheckbox={},apex.kcUtils.irCheckbox.options=[],function(e,r,t,o,i,n,a,d,c){"use strict";var s=[],l=[];r.init=function(){r.reportId="#"+this.triggeringElement.id,e[r.reportId]={},e[r.reportId].context=this,e[r.reportId].resumeCallback=this.resumeCallback,e[r.reportId].refreshReport=this.action.attribute06,e[r.reportId].internalRefreshReportFlag=!1,e[r.reportId].checkBoxColumnId=this.action.attribute02,e[r.reportId].rowSelectionEnabled=this.action.attribute07,e[r.reportId].displayOnlyColumns=this.action.attribute08,e[r.reportId].renderOnlyDisabledCB="N"==this.action.attribute09,e[r.reportId].ajax={id:this.action.ajaxIdentifier,running:!1,type:"RENDER_CHECKBOX"},e[r.reportId].pageItems=this.action.attribute05,o('Init Interactive Report Checbox for Report with Static ID "'+r.reportId+'"!'),"load"==this.browserEvent?r.irHasMultipleViews()||r.handleLoadEvent():r.irHasMultipleViews()||e[r.reportId].renderOnlyDisabledCB||r.handleClickEvent()},r.getAllCheckboxes=function(){return i(r.reportId).find("td[headers*="+e[r.reportId].checkBoxColumnId+"] input")},r.getCheckboxElement=function(t){var o,n=i(e[r.reportId].context.browserEvent.target);return"INPUT"==n[0].nodeName?o=n:t.attr("headers")==e[r.reportId].checkBoxColumnId&&(o=t.find("input")),o},r.getReportFilters=function(){return i(r.reportId).find("ul.a-IRR-controls").find('span[id*="control_text"]')},r.checkIfFiltersAreTheSame=function(e,r){var t=!0,o=[],i=[];return e.each(function(){o.push(this.textContent)}),r.each(function(){i.push(this.textContent)}),JSON.stringify(o)!==JSON.stringify(i)&&(t=!1),t},r.updateCheckedRecordsArray=function(e,i){var n={};n.id=e,i&&!t.isIdInArrayObj(s[r.reportId],n.id)?(s[r.reportId].push(n),o("irCk.updateCheckedRecordsArray -> Record Added: ",n)):i||(s[r.reportId]=jQuery.grep(s[r.reportId],function(e){return e.id!=n.id}),o("irCk.updateCheckedRecordsArray -> Record Removed: ",n))},r.updateStateOfAllChecboxes=function(e){r.getAllCheckboxes().each(function(){this.checked=e,r.updateCheckedRecordsArray(this.value,e)})},r.updateStateOfCheckboxHeader=function(n){var a=i(r.reportId).find("th#"+e[r.reportId].checkBoxColumnId),d=r.getAllCheckboxes();if(t.objExists(n)&&t.objExists(a))o("irCk.updateStateOfCheckboxHeader -> checkboxAllHeader exists , so we will set checkboxAllHeader to ",n),a.find("input")[0].checked=n;else if(t.objExists(d)){var c=d.length===d.filter(":checked").length;o("irCk.updateStateOfCheckboxHeader -> allCheckboxesChecked: ",c),t.objExists(a)&&(o("irCk.updateStateOfCheckboxHeader -> checkboxAllHeader exists , so we will set checkboxAllHeader to ",c),a.find("input")[0].checked=c)}i(window).trigger("apexwindowresized")},r.updateStateOfCheckbox=function(t){var n=t[0].checked,a=e[r.reportId].context.browserEvent;return"INPUT"!==i(a.target)[0].nodeName&&(o("irCk.updateStateOfCheckbox -> Target Element not input so we check input here ! $(lEvent.target): ",i(a.target)),n=t[0].checked=!n),n},r.createCheckbox=function(e){var r=document.createElement("input");return r.type="checkbox",r.value=e,r},r.renderSelections=function(){var e=r.getAllCheckboxes();o("irCk.renderSelections -> We will render selection for all Checkboxes: ",e),t.objExists(s[r.reportId])?(o("irCk.renderSelections -> Array with checked records for report "+r.reportId+" exists so we will check all records that are inside !"),e.each(function(){var e={};e.id=this.value,this.checked=t.isIdInArrayObj(s[r.reportId],e.id)})):o("irCk.renderSelections -> Array with checked records for report "+r.reportId+" does not exist so we will not render any selections!"),r.updateStateOfCheckboxHeader()},r.renderCheckboxes=function(){if(!e[r.reportId].renderOnlyDisabledCB){var n=i(r.reportId).find("th#"+e[r.reportId].checkBoxColumnId),a=i(r.reportId).find("td[headers*="+e[r.reportId].checkBoxColumnId+"]");if(o('irCk.renderCheckboxes -> We will render checboxes for column "'+e[r.reportId].checkBoxColumnId+'"!'),t.objExists(n)){var d=r.createCheckbox("all");o('irCk.renderCheckboxes -> Target column header with Static ID "'+e[r.reportId].checkBoxColumnId+'" found and we will render checkbox!'),n.find("span").empty().append(d)}else apex.debug.error('irCk.renderCheckboxes -> Target column header with Static ID "'+e[r.reportId].checkBoxColumnId+'" not found!');t.objExists(a)?(o('irCk.renderCheckboxes -> Target column cells with Static ID "'+e[r.reportId].checkBoxColumnId+'" found and we will render checkboxes!'),a.each(function(){var e;e=t.objExists(this.firstElementChild)?this.firstElementChild.value:this.textContent,this.className.indexOf("aggregate")<0&&i(this).empty().append(r.createCheckbox(e))})):apex.debug.error('irCk.renderCheckboxes -> Target column cells with Static ID "'+e[r.reportId].checkBoxColumnId+'" not found!')}if(t.objExists(e[r.reportId].displayOnlyColumns)){var c=e[r.reportId].displayOnlyColumns.split(",");o("irCk.renderCheckboxes -> We will render display only checboxes!");for(var s=0;s<c.length;s++){(a=i(r.reportId).find("td[headers*="+c[s]+"]")).each(function(){var e=this.textContent;this.className.indexOf("aggregate")<0&&(i(this).empty().append(r.createCheckbox(e)),"Y"==e&&(i(this).find("input")[0].checked=!0),i(this).find("input")[0].disabled=!0)})}}i(window).trigger("apexwindowresized")},r.doAjax=function(t,o){e[r.reportId].ajax.type=t;var i,n=e[r.reportId].ajax.id,a={p_clob_01:JSON.stringify(s[r.reportId]),x01:t};"CLEAR_CHECKBOX"==t&&"internal"==o?(i={success:r.ajaxSuccess,error:r.ajaxError},e[r.reportId].internalRefreshReportFlag=!0):i={loadingIndicator:r.reportId,loadingIndicatorPosition:"centered",success:r.ajaxSuccess,error:r.ajaxError},e[r.reportId].ajax.running||(e[r.reportId].ajax.running=!0,apex.server.plugin(n,a,i))},r.ajaxSuccess=function(a,d,c){o("irCk.ajaxSuccess ajax.type: ",e[r.reportId].ajax.type),t.objExists(this.refreshObject)&&(r.reportId=this.refreshObject),"SUBMIT_CHECKBOX"==e[r.reportId].ajax.type?apex.event.trigger(r.reportId,"ir_selection_changed"):"RENDER_CHECKBOX"==e[r.reportId].ajax.type?(s[r.reportId]=a,r.hasReportData()&&r.renderSelections()):"CLEAR_CHECKBOX"==e[r.reportId].ajax.type&&(s[r.reportId]=[],"Y"!=e[r.reportId].refreshReport||e[r.reportId].internalRefreshReportFlag?r.hasReportData()&&(r.updateStateOfCheckboxHeader(!1),r.updateStateOfAllChecboxes(!1)):i(r.reportId).trigger("apexrefresh"),apex.event.trigger(r.reportId,"ir_selection_changed")),n.resume(e[r.reportId].resumeCallback,!1),e[r.reportId].ajax.running=!1},r.ajaxError=function(t,o,i){e[r.reportId].ajax.running=!1,n.handleAjaxErrors(i,o,t.errorMessage,e[r.reportId].resumeCallback)},r.irHasMultipleViews=function(){var e=i(r.reportId).find("div.a-IRR-controlGroup--views")[0],n=!1;return t.objExists()&&e.childElementCount>0&&(o("irCk.irHasMultipleViews -> We have multiple views for report : "+r.reportId+", this means that pivot,chart or group by view is enabled so we will not render checkboxes."),n=!0),o("irCk.irHasMultipleViews -> We don't have multiple views for report : "+r.reportId+",  we will render checkboxes."),n},r.hasReportData=function(){var e=!0,o=i(r.reportId).find("div.a-IRR-noDataMsg");return t.objExists(o)&&(e=!1),e},r.handleReportRefresh=function(){if(o("irCk.handleReportRefresh of Report : "+r.reportId),!r.irHasMultipleViews()&&r.hasReportData()){var e=r.getReportFilters(),t=r.checkIfFiltersAreTheSame(l[r.reportId],e);r.renderCheckboxes(),t?r.renderSelections():(l[r.reportId]=e,r.clearCheckedRecordsArrayAjax("internal"))}},r.setReportIdToItems=function(e){var n;if(t.objExists(e)){n=e.split(",");for(var a=0;a<n.length;a++)i("#"+n[a])[0].setAttribute("data-report-id",r.reportId)}else o("No page items specified !")},r.handleLoadEvent=function(){r.renderCheckboxes(),e[r.reportId].renderOnlyDisabledCB||(s[r.reportId]=[],r.doAjax("RENDER_CHECKBOX"),l[r.reportId]=r.getReportFilters(),i(e[r.reportId].context.triggeringElement).on("apexafterrefresh",function(){r.reportId="#"+this.id,r.handleReportRefresh()}),r.setReportIdToItems(e[r.reportId].pageItems))},r.handleClickEvent=function(){var n,a,d=e[r.reportId].context.browserEvent,c=i(d.target).closest("th#"+e[r.reportId].checkBoxColumnId),s=i(d.target).closest("tr");r.hasReportData()&&(t.objExists(c)?(o("irCk.handleClickEvent -> Checkbox column header Trigerred the event !"),n=r.getCheckboxElement(c),t.objExists(n)&&(a=r.updateStateOfCheckbox(n),r.updateStateOfAllChecboxes(a),r.doAjax("SUBMIT_CHECKBOX",!0))):t.objExists(s)&&("Y"==e[r.reportId].rowSelectionEnabled?(n=s.find("td[headers*="+e[r.reportId].checkBoxColumnId+"] input"),o("irCk.handleClickEvent -> Row selection is enabled, so we got element from triggering row ! Element : "+n)):(n=r.getCheckboxElement(i(d.target)),o("irCk.handleClickEvent -> Row selection is not enabled, so we only get the checkbox element only if the click is on the select checkbox with id ["+e[r.reportId].checkBoxColumnId+"] cell itself ! Element : "+n)),t.objExists(n)&&(a=r.updateStateOfCheckbox(n),r.updateCheckedRecordsArray(n.val(),a),r.doAjax("SUBMIT_CHECKBOX",!0),r.updateStateOfCheckboxHeader())))},r.clearCheckedRecordsArrayAjax=function(e,o){"item"==e?t.objExists(i(o))&&(r.reportId=o.dataset.reportId,r.doAjax("CLEAR_CHECKBOX")):"internal"==e&&r.doAjax("CLEAR_CHECKBOX",e)},apex.debug.LOG_LEVEL.APP_TRACE<=apex.debug.getLevel()&&t.functionLogger.addLoggingToNamespace(r)}(apex.kcUtils.irCheckbox.options,apex.kcUtils.irCheckbox,apex.kcUtils,apex.debug.info,apex.jQuery,apex.da,apex.server,apex.region);
